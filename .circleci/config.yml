version: 2.1

orbs:
  ruby: circleci/ruby@2.1.0
  node: circleci/node@5.1.0

jobs:
  database_mysql:
    docker:
      - image: cimg/mysql:5.7
        environment:
          MYSQL_DATABASE: project23_test
          MYSQL_ROOT_PASSWORD: mysqlpassword
          MYSQL_USER: project23_user
          MYSQL_PASSWORD: mysqlpassword
    steps:
      - run:
          name: Database Setup
          command: |
            echo "MYSQL DB"
  database_mongodb:
    docker:
      - image: mongo:7.0.3
    steps:
      - run:
          name: Database Setup
          command: |
            echo "MongoDB"
  rspec_build:
    working_directory: ~/project23
    docker:
      - image: cimg/ruby:3.2.1
        environment:
          RAILS_ENV: test
          MYSQL_USERNAME: project23_user
          MYSQL_PASSWORD: mysqlpassword
    environment:
      BUNDLE_JOBS: 4
      BUNDLE_PATH: vendor/bundle
      BUNDLE_RETRY: 3
      BUNDLER_VERSION: 2.1.4
      MYSQL_HOST: 127.0.0.1
      MYSQL_PASSWORD: mysqlpassword
      MYSQL_USERNAME: project23_user
      RACK_ENV: test
      RAILS_ENV: test
      SONAR_SCANNER_VERSION: 5.0.1.3006
    parallelism: 2
    steps:
      - checkout
      - setup_remote_docker
      - restore_cache:
          keys:
            - project23-app-{{ checksum "Gemfile.lock" }}
            - project23-app-{{ "$SONAR_SCANNER_VERSION" }}
            - project23-app-
      - run:
          name: Install Dependencies
          command: |
            gem install bundler
            bundle install
      - node/install:
          install-yarn: true
          node-version: "20.9"
      - run:
          name: Install Sonar Scanner
          command: |
            echo 'export SONAR_SCANNER_HOME=$HOME/.sonar/sonar-scanner-$SONAR_SCANNER_VERSION-linux' >> $BASH_ENV
            curl --create-dirs -sSLo $HOME/.sonar/sonar-scanner.zip https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-$SONAR_SCANNER_VERSION-linux.zip
            unzip -o $HOME/.sonar/sonar-scanner.zip -d $HOME/.sonar/
            echo 'export PATH=$SONAR_SCANNER_HOME/bin:$PATH' >> $BASH_ENV
            echo 'export SONAR_SCANNER_OPTS="-server --add-opens java.base/sun.nio.ch=ALL-UNNAMED --add-opens java.base/java.io=ALL-UNNAMED"' >> $BASH_ENV
      - save_cache:
          key: project23-app-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
            - $HOME/.sonar/
      - run:
          name: Database Setup
          command: |
            sleep 20
            bundle exec rake db:create
            bundle exec rake db:schema:load
      - run:
          name: Run RSpec
          command: |
            mkdir ~/project23/rspec-results
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec $(TESTFILES) --format progress --format RspecJunitFormatter -o rspec-results/rspec-$CIRCLE_NODE_INDEX.xml --format RspecSonarqubeFormatter -o rspec-sonarqube.xml
          when: always
      - run:
          name: Running sonar-scanner
          command: |
            sonar-scanner \
              -Dsonar.host.url=$SONAR_HOST_URL \
              -Dsonar.token=$SONAR_TOKEN \
              -Dsonar.ruby.coverage.reportPaths=coverage/coverage.json \
              -Dsonar.testExecutionReportPaths=rspec-sonarqube.xml
      - store_test_results:
          path: rspec-results
      - store_artifacts:
          path: coverage

workflows:
   rspec_workflow:
      jobs:
        - database_mysql
        - database_mongodb
        - rspec_build
